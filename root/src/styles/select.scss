@use 'sass:map';
@use '@angular/material' as mat;

@mixin color($theme) {
  $color-config: mat.get-color-config($theme);
  $primary-palette: map.get($color-config, 'primary');
  $accent-palette: map.get($color-config, 'accent');
  mat-select {
    border: 0.0625rem solid transparent;
    border-radius: 0.55rem;
    padding: 0.55rem 0.95rem;
    position: relative;
    transition: all .2s ease;
    letter-spacing: .025em;
    font-size: 1rem;
    box-shadow: 3px 3px 6px #b8b9be, -3px -3px 6px #fff;

    &:hover {
    }

    //color: mat.get-color-from-palette($primary-palette, 900);
  }
  mat-select .mat-form-field-infix {
    //background-color: red !important;
  }
  .mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {
    background-color: mat.get-color-from-palette($accent-palette, 700);
  }
  .mat-option, .mat-selected {
    background-color: mat.get-color-from-palette($accent-palette, 700);
  }
  .mat-select-arrow {
    color: mat.get-color-from-palette($accent-palette, 300);
  }
  .mat-option:hover:not(.mat-option-disabled), .mat-option:focus:not(.mat-option-disabled) {
    background-color: mat.get-color-from-palette($accent-palette, 900);
  }
}

@mixin typography($theme) {
  $typography-config: mat.get-typography-config($theme);
  mat-select {
    font-family: mat.font-family($typography-config);
  }
}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null {
    @include color($theme);
  }

  $typography-config: mat.get-typography-config($theme);
  @if $typography-config != null {
    @include typography($theme);
  }
}
